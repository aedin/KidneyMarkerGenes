build-last-errors="[]"
build-last-errors-base-dir="~/Documents/GitHub/Kidney/KidneyMarkerGenes/"
build-last-outputs="[{\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source KidneyMarkerGenes\\n\\n\",\"type\":0},{\"output\":\"[32mâœ”[39m Writing to [32mglobal[39m git config file\\n\",\"type\":1},{\"output\":\"$user.name\\n\",\"type\":1},{\"output\":\"[1] \\\"aedin\\\"\\n\",\"type\":1},{\"output\":\"\\n\",\"type\":1},{\"output\":\"$user.email\\n\",\"type\":1},{\"output\":\"[1] \\\"aedin@jimmy.harvard.edu\\\"\\n\",\"type\":1},{\"output\":\"\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* installing to library â€˜/Library/Frameworks/R.framework/Versions/3.5/Resources/libraryâ€™\\n\",\"type\":1},{\"output\":\"* installing *source* package â€˜KidneyMarkerGenesâ€™ ...\\n\",\"type\":1},{\"output\":\"** R\\n\",\"type\":1},{\"output\":\"** data\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"*** moving datasets to lazyload DB\\n\",\"type\":1},{\"output\":\"Warning: object â€˜clarkeGenesâ€™ is created by more than one data call\\n\",\"type\":2},{\"output\":\"** byte-compile and prepare package for lazy loading\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\n\",\"type\":1},{\"output\":\"*** installing help indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\n\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"[32mâœ”[39m Writing to [32mglobal[39m git config file\\n\",\"type\":1},{\"output\":\"$user.name\\n\",\"type\":1},{\"output\":\"[1] \\\"aedin\\\"\\n\",\"type\":1},{\"output\":\"\\n\",\"type\":1},{\"output\":\"$user.email\\n\",\"type\":1},{\"output\":\"[1] \\\"aedin@jimmy.harvard.edu\\\"\\n\",\"type\":1},{\"output\":\"\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (KidneyMarkerGenes)\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="0"
